/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        ene: ene {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp N>;
            label = "ENE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E         &kp R             &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P      &kp BSPC
&kp TAB     &kp A  &kp S  &kp D         &kp F             &kp G        &kp H    &kp J  &kp K      &kp L    &ene       &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V             &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp MINUS  &kp RIGHT_SHIFT
                          &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE    &kp RET  &mo 1  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3        &kp N4  &kp N5       &kp N6   &kp N7          &kp N8          &kp N9           &kp N0  &trans
&trans  &kp N6  &kp N7  &kp N8        &kp N9  &kp N0       &trans   &trans          &kp UP_ARROW    &trans           &trans  &bt BT_PRV
&trans  &trans  &trans  &trans        &trans  &trans       &trans   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &bt BT_NXT
                        &kp LEFT_ALT  &trans  &kp SPACE    &kp RET  &trans          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp PIPE       &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH          &kp DLLR  &kp PRCNT    &kp AMPS   &kp SLASH         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &trans
&kp BACKSLASH  &trans           &kp AT             &trans            &kp SEMI  &kp COLON    &kp TILDE  &kp QUESTION      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp ASTRK  &kp GRAVE
&trans         &kp LESS_THAN    &kp GREATER_THAN   &trans            &trans    &trans       &kp CARET  &kp SINGLE_QUOTE  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PLUS   &trans
                                                   &kp LEFT_CONTROL  &trans    &kp SPACE    &kp RET    &trans            &trans
            >;
        };
    };
};
